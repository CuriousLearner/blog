<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sanyam Khurana</title><link>http://SanyamKhurana.com/blog/</link><description>Curious Learner | FOSS Contributor | Passionate Geek</description><atom:link href="feeds/feeds/experience.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 28 Dec 2016 00:53:00 +0530</lastBuildDate><item><title>How to test your Ansible Deployment with Vagrant</title><link>http://SanyamKhurana.com/blog/ansible-deployment-vagrant.html</link><description>&lt;p&gt;When you start writing Ansible for automating your deployment, one common problem is about testing if it does work as you intend to do it. Some people prefer to do it directly on a server. But then it has all sorts of problems associated (for example when the no. of servers to be provisioned/deployed grows) and I clearly don't like the idea to test Ansible on servers directly. So, I chose the option to use virtual machines using Vagrant.&lt;/p&gt;
&lt;p&gt;With Vagrant you could test complex setups like (say) having 4 machines behind a load balancer (just to start with). I've tried to both provision as well as deployment using Ansible + Vagrant. In this post, I'll be quickly covering about testing deployment using Ansible + Vagrant.&lt;/p&gt;
&lt;p&gt;In your directory you run Vagrant init; that would provide you a Vagrantfile to start up your virtual machine. Here is a basic configuration that would enable you to boot up an ubuntu machine with a static ip which you could use later to put in your ansible host file.&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
Vagrant.configure&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;config&lt;span class="p"&gt;|&lt;/span&gt;
  config.vm.box &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ubuntu/trusty64&amp;quot;&lt;/span&gt;
  config.vm.network &lt;span class="s2"&gt;&amp;quot;private_network&amp;quot;&lt;/span&gt;, ip: &lt;span class="s2"&gt;&amp;quot;10.0.0.10&amp;quot;&lt;/span&gt;
  config.vm.network &lt;span class="s2"&gt;&amp;quot;forwarded_port&amp;quot;&lt;/span&gt;, guest: 22, host: 22
end
&lt;/pre&gt;
&lt;p&gt;Now you can boot up your virtual machine using &lt;tt class="docutils literal"&gt;`vagrant up`&lt;/tt&gt; and try to login using &lt;tt class="docutils literal"&gt;`vagrant ssh`&lt;/tt&gt;. After ssh-ing into your virtual server; you can do &lt;cite&gt;ifconfig&lt;/cite&gt; to verify that the IP of the server is &lt;cite&gt;10.0.0.10&lt;/cite&gt;.&lt;/p&gt;
&lt;p&gt;In your inventory file you can now mention the IP of the host to &lt;tt class="docutils literal"&gt;`10.0.0.10`&lt;/tt&gt;, exactly what we mentioned in the Vagrant file.&lt;/p&gt;
&lt;p&gt;Your ansible.cfg file can be like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;defaults&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; ./virtualhosts
&lt;span class="nv"&gt;private_key_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /path/to/project/deployment/.vagrant/machines/default/virtualbox/private_key
&lt;span class="nv"&gt;remote_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; vagrant
&lt;span class="nv"&gt;host_key_checking&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; False
&lt;/pre&gt;
&lt;p&gt;and we'll refer the hosts as virtualhosts, so your &lt;tt class="docutils literal"&gt;virtualhosts&lt;/tt&gt; inventory file would be like this:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
project_web &lt;span class="nv"&gt;ansible_ssh_host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10.0.0.10 &lt;span class="nv"&gt;ansible_ssh_port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt; &lt;span class="nv"&gt;ansible_ssh_user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;vagrant &lt;span class="nv"&gt;ansible_ssh_private_key_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/path/to/project/deployment/.vagrant/machines/default/virtualbox/private_key

&lt;span class="o"&gt;[&lt;/span&gt;project&lt;span class="o"&gt;]&lt;/span&gt;
project_web

&lt;span class="o"&gt;[&lt;/span&gt;project:vars&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;repo_remote&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;origin
&lt;span class="nv"&gt;repo_branch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;master
&lt;span class="nv"&gt;DEPLOYMENT_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;DEV
&lt;/pre&gt;
&lt;p&gt;Replace the &lt;tt class="docutils literal"&gt;ansible_ssh_private_key_file&lt;/tt&gt; with a valid path from your &lt;tt class="docutils literal"&gt;.vagrant&lt;/tt&gt; directory.&lt;/p&gt;
&lt;p&gt;Now try running your Ansible with&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
ansible-playbook -i virtualhosts playbook.yml
&lt;/pre&gt;
&lt;p&gt;And it's done, with your &lt;tt class="docutils literal"&gt;ansible.cfg&lt;/tt&gt;, the private ssh key would be correctly chosen for authentication and the &lt;tt class="docutils literal"&gt;playbook&lt;/tt&gt; would run by user &lt;tt class="docutils literal"&gt;vagrant&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;One can model more complex setups with lot of servers and load balancer to mimic actual deployment on servers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Wed, 28 Dec 2016 00:53:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2016-12-28:blog/ansible-deployment-vagrant.html</guid></item><item><title>Moved to a static blog</title><link>http://SanyamKhurana.com/blog/moving-to-static-blog.html</link><description>&lt;p&gt;Starting from today, my blog is now entirely shifted from &lt;a class="reference external" href="http://ersanyamkhurana.wordpress.com"&gt;ersanyamkhurana.wordpress.com&lt;/a&gt; to &lt;a class="reference external" href="http://www.sanyamkhurana.com/blog"&gt;sanyamkhurana.com/blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I already liked the idea of static blog and setting up blog for &lt;a class="reference external" href="http://pydelhi.org/blog"&gt;PyDelhi&lt;/a&gt; and &lt;a class="reference external" href="http://mozpacers.org/blog"&gt;Mozilla Delhi&lt;/a&gt; made me realized that I should too shift on using a static blog. It's so much fun to do this, just simple text editing in rST or MD and it's done.&lt;/p&gt;
&lt;p&gt;The journey seems promising and interesting. This blog is now on Pelican which runs on Python :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Tue, 15 Mar 2016 01:46:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2016-03-15:blog/moving-to-static-blog.html</guid></item><item><title>Bootstrap Modal Scroll Bug on Chrome [Easy-Fix]</title><link>http://SanyamKhurana.com/blog/bootstrap-modal-scroll-bug-on-chrome-easy-fix.html</link><description>&lt;p&gt;As usual, I was contributing more to the PyDelhi Conference project and
saw that the code of conduct was really occupying a large space and
wasn't looking good. I contacted theskumar on IRC and we decided to make
some changes in the FAQ as well as Code of Conduct section.&lt;/p&gt;
&lt;p&gt;Quick enough I decided to have modals to be used for displaying the
short and long version of code of conduct. I did it as well as the other
task of modifying the FAQ section.&lt;/p&gt;
&lt;p&gt;I told theskumar about it. Since it was around 2 AM, everyone was
sleeping. Next day, I got a reply from theskumar that the modal was not
scrolling on the mobile.&lt;/p&gt;
&lt;p&gt;I tried quickly on my mobile and it worked. I asked him about the
browser he was using, and he told me that it was Chrome. I tried that on
firefox and it was working.&lt;/p&gt;
&lt;p&gt;I then tried it on my desktop on both firefox and chrome. In firefox,
both on mobile and desktop it was working fine, but in chrome, both on
mobile and desktop, it was not scrolling.&lt;/p&gt;
&lt;p&gt;I started searching, and got to the official bootstrap repo on github,
where I found various issues, and this was a known bug on chrome.&lt;/p&gt;
&lt;p&gt;I got to StackOverflow in search of alternatives, and then kept on
applying it. But no success. Either the content of the body moves, or
the whole page hanged.&lt;/p&gt;
&lt;p&gt;I reached out Apoorva mam, and then she helped me. The solution was to
have a scroll bar implemented in the modal keeping it's height fixed.&lt;/p&gt;
&lt;p&gt;So, we just added this to CSS:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;.modal-body {&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;position: relative;&lt;/div&gt;
&lt;div class="line"&gt;padding: 20px;&lt;/div&gt;
&lt;div class="line"&gt;height: 200px;&lt;/div&gt;
&lt;div class="line"&gt;overflow-y: scroll;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and it's working!&lt;/p&gt;
&lt;p&gt;I hope this would help someone who is still figuring out about scrolling
bug on chrome.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Wed, 13 Jan 2016 00:55:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2016-01-13:blog/bootstrap-modal-scroll-bug-on-chrome-easy-fix.html</guid></item><item><title>Authenticating And Getting Info From Explara API</title><link>http://SanyamKhurana.com/blog/authenticating-and-getting-info-from-explara-api.html</link><description>&lt;p&gt;PyDelhi is organizing a mini PyCon this year with the name PyDelhi Conf.
And we all are having a great time working behind the scenes to make it
a success. I'm contributing to building up the website for the confrence
(conference.pydelhi.org).&lt;/p&gt;
&lt;p&gt;So, there was this task of fetching the no. of tickets left for the
conference from explara and displaying it on the website. I picked it up
and had a look at Explara API. And Bingo! I noticed the tickets
end-point, which would contain the remaining tickets in the JSON format.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I got into reading about accessing api. There are two methods, one is for user access and another one is for app access.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Since user access is good enough for the kind of work we're thinking to do, I decided to go by first method and generated the access token from my personal account and made a test event for testing purpose.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After several tries and errors, I was not able to authenticate the API.
It was either giving me 401 or 403. Then after a day, I contacted
Anuvrat &amp;amp; Saurabh on IRC. Also, I reached to Rishabh. Rishabh told me
that he was able to authenticate for the app method which uses OAuth2.
Then he tried for the user method and told me. And there I am.&lt;/p&gt;
&lt;p&gt;Doing a blunder. The Authorization token in the header would be
preceeded by 'Bearer' so the header would be:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Key: Authorization&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Value: Bearer &amp;lt;YOUR_API_KEY&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And then voila, it was authorized. Soon to my surprise, it was giving me
E007 which is a custom status code of explara which implies that eventId
is incorrect. I just clicked on edit on my event and in the url I found
something like&lt;/p&gt;
&lt;p&gt;eid/116168&lt;/p&gt;
&lt;p&gt;And I thought, yeah, that's the eventId I started passing it. But always
I was getting E007. Rishabh was also trying but he was also not able to
get the response 200.&lt;/p&gt;
&lt;p&gt;At around 12.30 AM Rishabh told me that he's going to sleep, and would
try tomorrow. But I decided to try more. I googled on how to find the
eventId of explara event, but no concrete answer. I kept on trying, and
then decided to have a look at other methods API is offering.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;There was an endpoint to get all events which require no parameters to be passed. I hit that end-point and there I was.&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I got the event details as JSON and find the eventId of the event I created.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Now I took that eventId and hit the ticket end point to get the details, but there was always E007 error. I tried different methods to pass eventId parameter. I tried to pass it in a JSON body, but no success.&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Then I tried x-www-form-urlencoded and then the error code changed. I quickly searched, and got to know that I need to change the content-type of my request in the header.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I changed the header and added:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Key: Content-Type&lt;/div&gt;
&lt;div class="line"&gt;Value: application/x-www-form-urlencoded&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;and bingo! I got the ticket status&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Now I just wrote a simple flask script to issue the request and then display the tickets left in JSON format.&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;And here it is:&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/CuriousLearner/explara-ticket-status"&gt;https://github.com/CuriousLearner/explara-ticket-status&lt;/a&gt;
|  Also forked to PyDelhi:
&lt;a class="reference external" href="https://github.com/PyDelhi/explara-ticket-status"&gt;https://github.com/PyDelhi/explara-ticket-status&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At 3:05 AM the task was completed, and I was pretty much happy about it.
A good learning experience and I hope that someone would find it useful
while working with explara api. Lack of examples caused more time on
this than was really needed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Wed, 13 Jan 2016 00:53:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2016-01-13:blog/authenticating-and-getting-info-from-explara-api.html</guid></item><item><title>How to clone a large repository using git</title><link>http://SanyamKhurana.com/blog/how-to-clone-a-large-repository-using-git.html</link><description>&lt;p&gt;So, I was trying to clone the official Mozilla gecko repo and it had
around 455182 commits.&lt;/p&gt;
&lt;p&gt;As usual I executed on my terminal:&lt;/p&gt;
&lt;blockquote&gt;
git clone &lt;a class="reference external" href="https://github.com/mozilla/gecko-dev"&gt;https://github.com/mozilla/gecko-dev&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Then it took whole night to get cloned. I was awake the whole night. At
5:20 AM, it was around 90% received and then boom, it just crashed.&lt;/p&gt;
&lt;p&gt;All the data downloaded of more than 1 GB was wasted.&lt;/p&gt;
&lt;p&gt;Well, whatever happens, always happens for good. This provided me an
awesome opportunity to learn how to easily clone large repos.&lt;/p&gt;
&lt;p&gt;So, there are two ways around this.&lt;/p&gt;
&lt;div class="section" id="do-a-shallow-clone"&gt;
&lt;h2&gt;&lt;strong&gt;Do a shallow clone!&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Wait, what? What is a shallow clone?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Well, I mean clone the repo but not with all commits. Let's do it for
just latest commit ie only one commit. Later once all the objects are
extracted, we can deepen the clone.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So, how do you do that in git?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With the depth parameter as:&lt;/p&gt;
&lt;blockquote&gt;
git clone --depth=1 &lt;a class="reference external" href="https://github.com/mozilla/gecko-dev"&gt;https://github.com/mozilla/gecko-dev&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Here I've given depth of 1 commit, and suddenly the 1.5 GB repo became
just around 258 MB to be downloaded.&lt;/p&gt;
&lt;p&gt;If you still are stuck, and even this is difficult to clone because of
unstable connection then prefer downloading a bundle, or explore &lt;a class="reference external" href="http://stackoverflow.com/questions/3954852/how-to-complete-a-git-clone-for-a-big-project-on-an-unstable-connection"&gt;more
option via this SO
Question&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Once you have shallow clone, you can deepen it.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
git fetch --depth=100&lt;/blockquote&gt;
&lt;p&gt;to fetch 100 commits&lt;/p&gt;
&lt;p&gt;or if you want to get all commits then simply use:&lt;/p&gt;
&lt;blockquote&gt;
git fetch --unshallow&lt;/blockquote&gt;
&lt;p&gt;and that would fetch all the commits and make your repo similar to what
you do in the initial place like using git clone simply.&lt;/p&gt;
&lt;p&gt;I hope this would help someone :)&lt;/p&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Mon, 28 Dec 2015 14:14:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2015-12-28:blog/how-to-clone-a-large-repository-using-git.html</guid></item><item><title>Sieve of Eratosthenes - An efficient way to solve problems about Prime numbers</title><link>http://SanyamKhurana.com/blog/sieve-of-eratosthenes-an-efficient-way-to-solve-problems-about-prime-numbers.html</link><description>&lt;p&gt;Long ago, I think 2-3 years ago, I came to know about Project Euler
Problems, I made an account, solved 1 or 2 problems, and then never
tried them.&lt;/p&gt;
&lt;p&gt;Now, I decided to give them a try again. I was solving Project Euler 10
Problem which states that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.&lt;/p&gt;
&lt;p&gt;Find the sum of all the primes below two million.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, I wrote this Python code for the same. I know it's not optimized.
Not at all. Why, you'll come to know shortly.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://paste.fedoraproject.org/191242/&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I tried to run this first for 10 to get an answer 17, I was happy. So, I changed it to 2 million and ran the code. It ran for some time, but no output, so I decided to keep printing the number on which it is executing at each step. I ran it again. After around 2 hours, I noticed it reached around 0.2 million.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I knew that is terrible and it would not solve this way. So, I
researched about the problem and came to know about &lt;strong&gt;Sieve of
Eratosthenes&lt;/strong&gt;through this question on StackOverflow:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/9233408/project-euler-10-why-the-first-python-code-runs-much-faster-than-the-second-on"&gt;http://stackoverflow.com/questions/9233408/project-euler-10-why-the-first-python-code-runs-much-faster-than-the-second-on&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I jumped over to Wikipedia page and understood what this algorithm was
actually all about, and I knew, my algo was taking time because it would
evaluate a number to be prime or not for each and every number from 1 to
2 million which is processor intensive and redundant.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What does Sieve of Eratosthenes does?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First it creates a list of numbers on which we want to carry some prime
number operation for which we want to know if they are prime or not. It
takes a number for example 2, calculate if it's prime, and then remove
all the elements which are multiple of 2.&lt;/p&gt;
&lt;p&gt;Then it jumps to next number, say 3, which is prime, and then removes
all it's multiples.&lt;/p&gt;
&lt;p&gt;While I was trying to do the calculation of whether a number is prime or
not for each and every number till 2 million, this algo would calculate
the prime number property for very low amount of numbers. Hence,
efficient.&lt;/p&gt;
&lt;p&gt;I have solved 15 problems on Project Euler till now :)&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="image0" src="https://projecteuler.net/profile/CuriousLearner.png" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sanyam Khurana</dc:creator><pubDate>Fri, 27 Feb 2015 13:33:00 +0530</pubDate><guid>tag:SanyamKhurana.com,2015-02-27:blog/sieve-of-eratosthenes-an-efficient-way-to-solve-problems-about-prime-numbers.html</guid></item></channel></rss>